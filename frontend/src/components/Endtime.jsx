import React, { useEffect, useState } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import Confetti from "react-confetti";
import "./Endtime.css";

const Endtime = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const [showConfetti, setShowConfetti] = useState(true);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    const timer = setTimeout(() => {
      setShowConfetti(false);
    }, 5000);
    return () => clearTimeout(timer);
  }, []);

  // üåç URL oxiridagi tilni olish
  const pathSegments = location.pathname.split("/");
  const lang = pathSegments[pathSegments.length - 1] || "en";

  // üåç Tilni almashtirganda URL yangilash
  const handleLanguageChange = (event) => {
    const newLang = event.target.value;
    navigate(`/endtime/${newLang}`);
  };

  // üåç Til bo‚Äòyicha matnlarni aniqlash
  const texts = {
    en: {
      title: "Congratulations!",
      message:
        "Congratulations! The moment you've been eagerly anticipating has finally arrived. Our platform is now officially live, opening up endless possibilities for you to embark on your journey, explore exciting new projects, and collaborate seamlessly with your team. Join us today and be part of something bigger‚Äîwhere creativity meets opportunity, and dreams turn into reality! üöÄ‚ú®",
      signUp: "Sign Up",
    },
    uz: {
      title: "Tabriklaymiz!",
      message:
        "Tabriklaymiz! Siz uzoq kutilgan lahzaga yetib keldingiz. Bizning platformamiz rasmiy ravishda ishga tushdi! Endi siz uchun cheksiz imkoniyatlar eshigi ochildi: o‚Äòz loyihalaringizni boshlang, yangi qiziqarli g‚Äòoyalarni o‚Äòrganing va jamoangiz bilan bemalol hamkorlik qiling. Bugun bizga qo‚Äòshiling va katta loyihaning bir qismi bo‚Äòling ‚Äî bu yerda kreativlik imkoniyat bilan uchrashadi va orzular haqiqatga aylanadi! üöÄ‚ú®",
      signUp: "Ro‚Äòyxatdan o‚Äòtish",
    },
    ru: {
      title: "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!",
      message:
        "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ù–∞—Å—Ç—É–ø–∏–ª —Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ç–∞–∫ –∂–¥–∞–ª–∏. –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞, –æ—Ç–∫—Ä—ã–≤–∞—è –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –Ω–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å, –∏—Å—Å–ª–µ–¥—É–π—Ç–µ –Ω–æ–≤—ã–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –±–µ–∑—É–ø—Ä–µ—á–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–π—Ç–µ —Å–æ —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–æ–π. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º —Å–µ–≥–æ–¥–Ω—è –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é —á–µ–≥–æ-—Ç–æ –±–æ–ª—å—à–µ–≥–æ ‚Äî —Ç–∞–º, –≥–¥–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏, –∞ –º–µ—á—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é! üöÄ‚ú®",
      signUp: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
    },
  };

  // üîÑ Ro‚Äòyxatdan o‚Äòtish bosilganda sahifaga o'tish
  const handleSignUp = () => {
    setIsLoading(true);
    setTimeout(() => {
      setIsLoading(false);
      navigate(`/signup/${lang}`); // ‚úÖ SignUp sahifasiga o'tadi
    }, 500);
  };

  return (
    <div className="endtime">
      {showConfetti && (
        <Confetti numberOfPieces={150} gravity={0.3} wind={0} recycle={false} />
      )}

      {/* Home tugmasi */}
      <button
        className="home-btn"
        onClick={() => navigate(`/dashboard/${lang}`)}
      >
        Home
      </button>

      {/* üåç Til tanlash */}
      <div className="language-selector">
        <select id="language" value={lang} onChange={handleLanguageChange}>
          <option value="en">English</option>
          <option value="uz">O'zbek</option>
          <option value="ru">–†—É—Å—Å–∫–∏–π</option>
        </select>
      </div>

      <div className="endtime-message">
        <h1 className="endtime-title">{texts[lang].title}</h1>
        <p className="endtime-text">{texts[lang].message}</p>

        {/* Ro‚Äòyxatdan o‚Äòtish tugmasi */}
        <button
          className="endtime-btn"
          type="button"
          onClick={handleSignUp}
          disabled={isLoading}
        >
          {isLoading ? <span className="spinner"></span> : texts[lang].signUp}
        </button>
      </div>
    </div>
  );
};

export default Endtime;
